Anope Version 1.6.2
--------------------
No Changes.

Anope Version 1.6.1
--------------------
No Changes.

Anope Version 1.6.0
--------------------
** ADDED CONFIGURATION DIRECTIVES **

###########################################################################
#
# DefCon configuration
#
###########################################################################
# DefConLevel <level> [OPTIONAL]
#     Default defcon level (1-5) to use when starting services up, level 5
#     instructs services to run as normal.

#DefConLevel 5

# DefCon1-4 <numeric> [REQUIRED if Defcon is activated]
#     These numercics determine which of the following operations take place
#     at each level, the correct numeric can be found by adding together the
#     number for each restriction you wish to place at a level.
#     No new channel registrations			1
#     No New Nick Registrations				2
#     No MLOCK changes 					4
#     Force Chan Mode					8
#     Use Reduced Session Limit				16
#     KILL any new clients trying to connect		32
#     Services will ignore everyone but opers		64
#     Services will silently ignore everyone but opers	128
#     AKILL all new clients trying to connect		256
#     No new memos sent to block memoserv attacks	512

#DefCon4 23
#     No channel reg + No Nick Reg + No MLOCK changes + Use Reduced Session Limit
#           1        +      2      +         4        +            16

#DefCon3 31
#     As DefCon4 + Services will Force Chan Mode's on channels
#          23    +                     8

#DefCon2 159
#     As DefCon3 + Services will silently ignore everyone but opers
#          32    +                    128

#DefCon1 415
#     As DefCon2 + AKILL all new clients trying to connect
#          159   +                  256

# DefConSessionLimit <limit> [REQUIRED if DefCon is activated]
#     New session limit to use when a defcon level is using "reduced"
#     session limiting.
#     NOTE: When using DefCon this value needs to be defined
#DefConSessionLimit 2

# DefConAkillExpire <time> [REQUIRED if DefCon is activated]
#     Length of time to add the AKILL for when DEFCON is preventing
#     all new clients from connecting to the network
#
#     NOTE: As with all expire times, the expirey check will only be
#     carried out once every "ExpireTimeout" so if this setting is
#     30m the the akill could last for 30m regardless of this setting.
#
#     NOTE: When using DefCon this value needs to be defined
#DefConAkillExpire 5m

# DefConChanModes <modes> [REQUIRED if DefCon is activated]
#     The channel modes to set on all channel's when the DefCon channel
#     mode system is in use.
#
#     NOTE: Choose these modes carefully, because when defcon switches to
#     a level which does NOT have the mode setting selected, services will
#     set the reverse on all channel's, e.g. if this setting is +RN
#     when defcon is used all channel's will be set to +RN, when
#     defcon is removed, channels will all be set to -RN. You don't
#     want to set this to +k for example because when defcon is removed all
#     channels will -k.
#     NOTE: mlock'ed modes will not be lost
#DefConChanModes "+R"

# DefConTimeOut <time> [OPTIONAL]
#     This value can be used to automaticaly return the network to
#     defcon 5 after the specified time period - just in case any opers
#     forget to remove a defcon setting.
#DefConTimeOut 15m

# GlobalOnDefcon [OPTIONAL]
#
#     Setting this directive will make Services send a global message on
#     Defcon Level changes.
#GlobalOnDefcon

# GlobalOnDefconMore [OPTIONAL]
#
#     Setting this directive will make Services send a global message on
#     Defcon Level changes. Uncommenting this will allow you to send along
#     with the new level, the DefconMessage.
#GlobalOnDefconMore

#DefconMessage "Put your message to send your users here. Dont forget to uncomment GlobalOnDefconMore"

# DefConOffMessage [OPTIONAL]
#
#     If this is defined, it will be used in place of GlobalOnDefcon and
#     GlobalOnDefconMore when defcon is returned to level 5
#DefConOffMessage "Services are now back to normal, sorry for any inconvenience"

# DefConAkillReason <text> [REQUIRED if DefCon is activated]
#
#     When using DEFCON this setting will be used when any clients are killed
#     or akilled from the network by defcon
#
#DefConAkillReason "This network is currently not accepting connections, please try again later"

###########################################################################
#
# MySQL configuration
#
###########################################################################
#
# Mysql [OPTIONAL]
#
#     Your MySQL configuration for use with Anope.
#     To disable MySQL functionality, just comment out this block.
#     To make use of MySQL use these directives and change their
#     setting to the appropiate values.
#
#     MysqlHost defines the Mysql server hostname.
#     MysqlUser defines the Mysql user to log in with.
#     MysqlPass defines the Mysql pass required for the specified user to log in.
#     MysqlName defines the Mysql database name Anope uses
#     MysqlSock defines the Mysql UNIX socket
#     MysqlPort defines the Mysql TCP port
#
#MysqlHost "localhost"
#MysqlUser "Anonymous"
#MysqlPass ""
#MysqlName "anope"
#MysqlSock "/tmp/mysql.sock"
#MysqlPort 3306

# MysqlSecure "<des>|<md5>|<sha>|<key>" [OPTIONAL]
#
#    Method for storing passwords on MySQL. Available methods are: 
#    Empty or not set will save your passwords as clear text.
#    des  : Encrypt using a simple DES algorithm.
#    md5  : Produces the md5 hash for the password.
#    sha  : Calculates the checksum using a Secure Hash Algorithm.
#    key  : Encodes using "key" as password.
#    Please read docs/MYSQL file for more info and details.
#
#MysqlSecure ""

# MysqlRetries <value>      [OPTIONAL]
# MysqlRetryGap <value>     [OPTIONAL]
#
#    These values let you define how often and with how much interruption Anope
#    shall retry to open a connection when losing the contact to the mysql db.
#    The product of these values must be between 1 and 60.
#
#MysqlRetries 10
#MysqlRetryGap 1

###########################################################################
#
# Module configuration
#
###########################################################################
#
# ModuleAutoload [OPTIONAL]
#
# When compiled with module support, this contains a space seperated list
# of modules to automaticaly load as soon as possible, e.g. IRCD support modules.
#
#ModuleAutoload "hs_moo ircd_defizzer"

# ModuleDelayedAutoload [OPTIONAL]
#
# When compiled with module support, this contains a space seperated list
# of modules to automaticaly load when services are ready for new clients.
# e.g. new pesudo clients such as CatServ :-) *meow*
#
#ModuleDelayedAutoload "ircd_catserv"

###########################################################################
#
# Misc configuration
#
###########################################################################
# AnonymousGlobal [OPTIONAL]
#     hides the oper's nick in a globalmsg
#AnonymousGlobal

# DontQuoteAddresses [OPTIONAL]
#
# When enabled, services will not attempt to "" the TO: fields in mails
#
# So far we only know of ESMTP which needs this set.
#
#DontQuoteAddresses

#     If services can't connect to the RemoteServer, they will try
#     RemoteServer2 (if defined). If they can't connect to RemoteServer2,
#     they will use RemoteServer3 (if defined).
RemoteServer    localhost 6667 "mypass"
#RemoteServer2    localhost 6667 "mypass"
#RemoteServer3   localhost 6667 "mypass"

# NSRestrictGetPass  [OPTIONAL]
# 
# When enabled, services will only allow Services Root to use the getpass
# command on a nick.
#
#NSRestrictGetPass

# CSRestrictGetPass  [OPTIONAL]
# 
# When enabled, services will only allow Services Root to use the getpass
# command on a channel.
#
#CSRestrictGetPass

# CSOpersOnly [OPTIONAL]
#     If this is defined, only IRC Operators will be permitted to use ChanServ.
#CSOpersOnly

# GlobalOnCycleMessage <text> [OPTIONAL]
#
#     This is the message to global when using GlobalOnCycle
#GlobalOnCycleMEssage "Services are restarting, they will be back shortley - please be good while were gone"

# GlobalOnCycleUP <text> [OPTIONAL]
#
#     if defined, this string will be globaled when services join the network
#GlobalOnCycleUP "Services are now back online - have a nice day"

# ChanKillExpiry <time> [REQUIRED]
# Default /OS CHANKILL expire time
ChanKillExpiry  7d

# HostSetters <nicks>  [DISCOURAGED]
#    Specifies the nicks of NON-OPERS allowed to Set/Remove vHosts using
#    HostServ.  Can be re-loaded with /msg operserv reload
#    You can specify more than one nick by separating each one by a space.
#
#    make sure you insert the correct nick(s) here..
#HostSetters "rob dengel certus"

Anope Version 1.4.18
--------------------
** ADDED    CONFIGURATION DIRECTIVES **
# PreNickServDB prenick.db

# NSEmailReg [OPTIONAL]
#      This option splits the nick registration into 2 steps,  the first
#      after registering a email with a passcode is sent to the supplied
#      email address, this passcode needs to be entered with a confirm
#      command before the nick registration will be completed.
#
#      You must have mail / forcemail set for this to work correctly.
#      It is also recommended that MailDelay be set to a sensible value
#      to prevent mail flooding

# NSEmailReg

# NSRExpire <time> [OPTIONAL]
#     Sets the length of time a user gets to enter the confirmation code
#     which has been e-mailed to them before the nick will be relased
#     for general use again

# NSRExpire 1d

# NSModeOnID  [OPTIONAL]
#
# When enabled, services will set channel modes a user has when they identify
#

# NSModeOnID

# HideStatsO [OPTIONAL]
#    
#    Setting this directive will make Services only show Stats O to
#    IRC Operators.

#HideStatsO
 
# GlobalOnCycle [OPTIONAL]
#
#    Setting this directive will make Services send global messages on
#    starting up and shuting down/restarting.
 
#GlobalOnCycle

** MODIFIED CONFIGURATION DIRECTIVES **
# NetworkDomain <name> [OPTIONAL]
#
#     If your network has a common domain name, specify it there (for
#     example, all IRCZONE servers have a name ending in ".irczone.cl",
#     so "irczone.cl" would be set there. It will be used by the OperServ 
#     GLOBAL command, and if you don't have a common domain name, this 
#     command may just not work.
#
#     You can specify more than one Network Domain by separating each one by
#     a space: NetworkDomain "localnet.net localnet.com"
NetworkDomain "localnet.com"

AnopeVersion 1.4.26
--------------------------
** ADDED    CONFIGURATION DIRECTIVES **
# DontQuoteAddresses [OPTIONAL]
#
# When enabled, services will not attempt to "" the to fields in mails
#
# So far we only know of ESMTP which needs this set.
#

#DontQuoteAddresses

Anope Version 1.4.18
--------------------
** ADDED    CONFIGURATION DIRECTIVES **
# PreNickServDB prenick.db

# NSEmailReg [OPTIONAL]
#      This option splits the nick registration into 2 steps,  the first
#      after registering a email with a passcode is sent to the supplied
#      email address, this passcode needs to be entered with a confirm
#      command before the nick registration will be completed.
#
#      You must have mail / forcemail set for this to work correctly.
#      It is also recommended that MailDelay be set to a sensible value
#      to prevent mail flooding

# NSEmailReg

# NSRExpire <time> [OPTIONAL]
#     Sets the length of time a user gets to enter the confirmation code
#     which has been e-mailed to them before the nick will be relased
#     for general use again

# NSRExpire 1d

# NSModeOnID  [OPTIONAL]
#
# When enabled, services will set channel modes a user has when they identify
#

# NSModeOnID

# HideStatsO [OPTIONAL]
#    
#    Setting this directive will make Services only show Stats O to
#    IRC Operators.

#HideStatsO
 
# GlobalOnCycle [OPTIONAL]
#
#    Setting this directive will make Services send global messages on
#    starting up and shuting down/restarting.
 
#GlobalOnCycle

Anope Version 1.4.16
--------------------
** ADDED    CONFIGURATION DIRECTIVES **
HostServName	"HostServ"  "vHost Server"
HostServDB     hosts.db
HostServAlias  "HostServ2" "Vhostname Server Forwarder"

** MODIFIED CONFIGURATION DIRECTIVES **

# ForceForbidReason [OPTIONAL]
#
#     If set, Services will require a reason when a forbid is added, else
#     the reason is optional. This directive also applies to SUSPENDed
#     channels as well.

ForceForbidReason

** DELETED  CONFIGURATION DIRECTIVES **

Anope Version 1.4.15
--------------------
** ADDED    CONFIGURATION DIRECTIVES **

# ...Alias <nick> <string>  [OPTIONAL]
#     Specify alternate nicknames for services. When a user will /msg 
#     NickServAlias sthing, it will be forwarded to NickServName, and
#     NickServName will answer. This can be used to ease the migration
#     from another network, for example if your services are called
#     NickKeeper, ChanKeeper, etc ... and the other network calls them
#     NickServ, ChanServ, etc ...

NickServAlias    "NickServ2"  "Nickname Server Forwarder"
ChanServAlias    "ChanServ2"  "Channel Server Forwarder"
MemoServAlias    "MemoServ2"  "Memo Server Forwarder"
BotServAlias     "BotServ2"   "Bot Server Forwarder"
HelpServAlias    "HelpServ2"  "Help Server Forwarder"
OperServAlias    "OperServ2"  "Operator Server Forwarder"
GlobalAlias      "Global2"    "Global Noticer Forwarder"
#DevNullName     "DevNull2"   "/dev/null -- message sink Forwarder"

# LogChannel <channel> [OPTIONAL]
#
#     When defined, services will output log messages to this channel.
#     IMPORTANT: This can be a security risk so make certain this channel
#     is sufficiently protected from normal access.

#LogChannel "#services"

# LogChannel [OPTIONAL]
#
#     When defined, services will output all BotServ chatter to the defined
#     LogChan above. It shows all uses of BotServ ACT and SAY commands. Note
#     that there is no logging to the log file. Only works is LogChannel is
#     also defined.

#LogBot

# SuperAdmin  [OPTIONAL]
#    Having this flag enabled will turn all Services Admin to have Founder
#    level on *all* registered channels.

#SuperAdmin

# AddAkiller [OPTIONAL]
#     Adds the nickname of the Operator issuing an AKILL to the kill reason.
#

AddAkiller
